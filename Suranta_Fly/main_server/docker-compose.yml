version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/flight_monitor
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ALIBABA_API_BASE_URL=${ALIBABA_API_BASE_URL}
      - ALIBABA_API_KEY=${ALIBABA_API_KEY}
      - ENABLE_EMAIL_NOTIFICATIONS=true
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    networks:
      - app-network

  celery_worker:
    build: .
    command: celery -A app.services.monitoring worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/flight_monitor
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=HS256
      - ALIBABA_API_BASE_URL=${ALIBABA_API_BASE_URL}
      - ALIBABA_API_KEY=${ALIBABA_API_KEY}
      - ENABLE_EMAIL_NOTIFICATIONS=true
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    networks:
      - app-network

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=flight_monitor
    ports:
      - "5432:5432"
    networks:
      - app-network

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge 